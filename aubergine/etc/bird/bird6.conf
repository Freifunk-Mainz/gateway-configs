timeformat protocol iso long;
#debug protocols all;
#debug commands 1;

# local addresses
define wi_addr_wi = fd56:b4dc:4b1e::a38:103; # wi-mesh-ip
define mz_addr_mz = fd37:b4dc:4b1e::a25:103; # mz-mesh-ip

# AS
define wi_as = 65036; # as of wiesbaden
define mz_as = 65037; # as of mainz

# on which addresses bird6 should listen on
# maybe multiple listen-options are not adhered to...
#listen bgp address wi_addr_wi;
#listen bgp address mz_addr_mz;

router id 10.56.1.3;

table icvpn_wi;     # ICVPN routes obtained via iBGP from WI gates
table icvpn_mz;     # ICVPN routes obtained via iBGP from WI gates

# functions
function is_default() {
  return net ~ [ ::0/0 ];
}

function is_ula() {
    return net ~ [ fc00::/7{48,64} ];
}

function is_fnev() {
  return net ~ [ 2001:bf7::/32+ ];
}

function is_ffrl() {
  return net ~ [ 2a03:2260::/30+ ];
}

function is_mwu_self_nets() {
    return net ~ [
        fd56:b4dc:4b1e::/48+,
        fd37:b4dc:4b1e::/48+
    ];
}

function is_wi_self_net() {
    return net ~ [ fd56:b4dc:4b1e::/48+ ];
}

function is_mz_self_net() {
    return net ~ [ fd37:b4dc:4b1e::/48+ ];
}

# sanity check: don't allow critical overrides
filter ibgp_icvpn_import_filter {
    if is_mwu_self_nets() then reject;
    if is_default() then reject;
    if is_ula() then accept;
    if is_fnev() then accept;
    if is_ffrl() then accept;
    reject;
}

# protocols
# necessary to inform bird about devices
protocol device {
    scan time 30;
};

protocol kernel kernel_wi {
    scan time 30;
    import none;
    export all;
    table icvpn_wi;
    kernel table 56;
};

protocol kernel kernel_mz from kernel_wi {
    table icvpn_mz;
    kernel table 37;
};

# templates for iBGP
template bgp bgp_ibgp_wi {
    local wi_addr_wi as wi_as;
    table icvpn_wi;
    import filter ibgp_icvpn_import_filter;
    export none;
    direct;
    gateway direct;
};

template bgp bgp_ibgp_mz from bgp_ibgp_wi {
    local mz_addr_mz as mz_as;
    table icvpn_mz;
};

# P E E R I N G S
# iBGP 

# Wiesi

protocol bgp wiesbaden1 from bgp_ibgp_wi { # lotuswurzel
    neighbor fd56:b4dc:4b1e::a38:17 as wi_as;
};

protocol bgp wiesbaden2 from bgp_ibgp_wi { # kaschu
    neighbor fd56:b4dc:4b1e::a38:d0 as wi_as;
};

# Meenz

protocol bgp mainz2 from bgp_ibgp_mz { # spinat
    neighbor fd37:b4dc:4b1e::a25:7 as mz_as;
};

protocol bgp mainz1 from bgp_ibgp_mz { # wasserfloh
    neighbor fd37:b4dc:4b1e::a25:e7 as mz_as;
};

